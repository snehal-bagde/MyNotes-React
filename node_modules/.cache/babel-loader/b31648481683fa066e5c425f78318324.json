{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\mynotes\\\\src\\\\CreateNote.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst CreateNote = props => {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const InputEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const addEvent = () => {\n    props.passNote(note);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: InputEvent,\n    value: note.title,\n    placeholder: \"Title\",\n    autoComplete: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    cols: \"\",\n    rows: \"\",\n    name: \"content\",\n    onChange: InputEvent,\n    value: note.content,\n    placeholder: \"Write a Note......\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: addEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    className: \"plus_sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default CreateNote;","map":{"version":3,"sources":["D:/React/mynotes/src/CreateNote.jsx"],"names":["React","useState","Button","AddIcon","CreateNote","props","note","setNote","title","content","InputEvent","event","name","value","target","preValue","addEvent","passNote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAP,IAAAA,OAAO,CAAEQ,QAAD,IAAc;AACpB,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALM,CAAP;AAMD,GARD;;AAUA,QAAMG,QAAQ,GAAG,MAAM;AACrBX,IAAAA,KAAK,CAACY,QAAN,CAAeX,IAAf;AACD,GAFD;;AAIA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEI,UAHZ;AAIE,IAAA,KAAK,EAAEJ,IAAI,CAACE,KAJd;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,YAAY,EAAC,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,EADP;AAEE,IAAA,IAAI,EAAC,EAFP;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,QAAQ,EAAEE,UAJZ;AAKE,IAAA,KAAK,EAAEJ,IAAI,CAACG,OALd;AAME,IAAA,WAAW,EAAC,oBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF,CADF,CADF;AA2BD,CA/CD;;AAiDA,eAAeZ,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst CreateNote = (props) => {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const InputEvent = (event) => {\r\n    const { name, value } = event.target;\r\n    setNote((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addEvent = () => {\r\n    props.passNote(note);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main_note\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={InputEvent}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n            autoComplete=\"none\"\r\n          />\r\n          <textarea\r\n            cols=\"\"\r\n            rows=\"\"\r\n            name=\"content\"\r\n            onChange={InputEvent}\r\n            value={note.content}\r\n            placeholder=\"Write a Note......\"\r\n          />\r\n          <Button onClick={addEvent}>\r\n            <AddIcon className=\"plus_sign\" />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"]},"metadata":{},"sourceType":"module"}